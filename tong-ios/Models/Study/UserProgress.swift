import Foundation

struct LocalUserFlashcardProgress: Codable, Identifiable {
    var id: String? // This will be auto-generated by Supabase
    var userId: String
    var flashcardId: String
    var langCode: String
    var interval: Int
    var dueDate: String
    var reviewCount: Int
    var lastReviewDate: String?
    var lastDifficulty: Int?
    
    enum CodingKeys: String, CodingKey {
        case id
        case userId = "user_id"
        case flashcardId = "flashcard_id"
        case langCode = "lang_code"
        case interval
        case dueDate = "due_date"
        case reviewCount = "review_count"
        case lastReviewDate = "last_review_date"
        case lastDifficulty = "last_difficulty"
    }
    
    init(userId: String, flashcardId: String, langCode: String, interval: Int, dueDate: String,
         reviewCount: Int, lastReviewDate: String? = nil, lastDifficulty: Int? = nil) {
        self.id = nil
        self.userId = userId
        self.flashcardId = flashcardId
        self.langCode = langCode
        self.interval = interval
        self.dueDate = dueDate
        self.reviewCount = reviewCount
        self.lastReviewDate = lastReviewDate
        self.lastDifficulty = lastDifficulty
    }
}

struct LocalUserLanguageLevel: Codable, Identifiable {
    var id: String?
    var userId: String
    var langCode: String
    var levelCode: String
    var startedAt: String?
    var updatedAt: String?
    
    enum CodingKeys: String, CodingKey {
        case id
        case userId = "user_id"
        case langCode = "lang_code"
        case levelCode = "level_code"
        case startedAt = "started_at"
        case updatedAt = "updated_at"
    }
    
    init(userId: String, langCode: String, levelCode: String, 
         startedAt: String? = nil, updatedAt: String? = nil) {
        self.id = nil
        self.userId = userId
        self.langCode = langCode
        self.levelCode = levelCode
        self.startedAt = startedAt
        self.updatedAt = updatedAt
    }
}

struct UserLesson: Codable, Identifiable {
    var id: String?
    var userId: String
    var lessonId: String
    var progress: Double
    var isCompleted: Bool
    var startedAt: String?
    var completedAt: String?
    
    enum CodingKeys: String, CodingKey {
        case id
        case userId = "user_id"
        case lessonId = "lesson_id"
        case progress
        case isCompleted = "is_completed"
        case startedAt = "started_at"
        case completedAt = "completed_at"
    }
}

struct UserStreak: Codable, Identifiable {
    var id: String?
    var userId: String
    var currentStreak: Int
    var maxStreak: Int
    var lastActivityDate: String
    
    enum CodingKeys: String, CodingKey {
        case id
        case userId = "user_id"
        case currentStreak = "current_streak"
        case maxStreak = "max_streak"
        case lastActivityDate = "last_activity_date"
    }
}

struct UserXP: Codable, Identifiable {
    var id: String?
    var userId: String
    var totalXp: Int
    var dailyXp: Int
    var weeklyXp: Int
    var lastResetDate: String
    
    enum CodingKeys: String, CodingKey {
        case id
        case userId = "user_id"
        case totalXp = "total_xp"
        case dailyXp = "daily_xp"
        case weeklyXp = "weekly_xp"
        case lastResetDate = "last_reset_date"
    }
} 